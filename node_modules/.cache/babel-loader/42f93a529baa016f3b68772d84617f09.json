{"ast":null,"code":"import _classCallCheck from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/caleb/Desktop/1819/react-scaffold/src/Shell.js\";\nimport React, { Component } from 'react'; // import Appbar from './Appbar';\n// import AppDrawer from './AppDrawer';\n// import AppMain from './AppMain';\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Hidden from '@material-ui/core/Hidden';\nvar drawerWidth = 260;\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    drawer: _defineProperty({}, theme.breakpoints.up('sm'), {\n      width: drawerWidth,\n      flexShrink: 0\n    }),\n    appBar: _defineProperty({\n      marginLeft: drawerWidth\n    }, theme.breakpoints.up('sm'), {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\")\n    }),\n    menuButton: _defineProperty({\n      marginRight: 20\n    }, theme.breakpoints.up('sm'), {\n      display: 'none'\n    }),\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3\n    }\n  };\n};\n\nvar Shell =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Shell, _Component);\n\n  function Shell() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Shell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Shell)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: true,\n      mobileOpen: false\n    };\n\n    _this.handleDrawerOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleDrawerClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleDrawerToggle = function () {\n      _this.setState(function (state) {\n        return {\n          mobileOpen: !state.mobileOpen\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Shell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n      var open = this.state.open;\n      var drawer = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, index % 2 === 0 ? React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"inbox\") : React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"mail\")), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }));\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, ['All mail', 'Trash', 'Spam'].map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, index % 2 === 0 ? React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"inbox\") : React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"mail\")), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }));\n      })));\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(AppBar, {\n        position: \"fixed\",\n        className: classes.appBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        onClick: this.handleDrawerToggle,\n        className: classes.menuButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"menu\")), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Responsive drawer\"))), React.createElement(\"nav\", {\n        className: classes.drawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Hidden, {\n        mdUp: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        container: this.props.container,\n        variant: \"temporary\",\n        anchor: theme.direction === 'rtl' ? 'right' : 'left',\n        open: this.state.mobileOpen,\n        onClose: this.handleDrawerToggle,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, drawer)), React.createElement(Hidden, {\n        smDown: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        classes: {\n          paper: classes.drawerPaper\n        },\n        variant: \"permanent\",\n        open: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, drawer))), React.createElement(\"main\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        paragraph: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem donec massa sapien faucibus et molestie ac.\"), React.createElement(Typography, {\n        paragraph: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\")));\n    }\n  }]);\n\n  return Shell;\n}(Component);\n\nShell.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(Shell);","map":{"version":3,"sources":["/Users/caleb/Desktop/1819/react-scaffold/src/Shell.js"],"names":["React","Component","PropTypes","classNames","withStyles","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","IconButton","Icon","ListItem","ListItemIcon","ListItemText","Hidden","drawerWidth","styles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","spacing","unit","Shell","state","open","mobileOpen","handleDrawerOpen","setState","handleDrawerClose","handleDrawerToggle","props","classes","map","text","index","container","direction","paper","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import Appbar from './Appbar';\n// import AppDrawer from './AppDrawer';\n// import AppMain from './AppMain';\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst drawerWidth = 260;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass Shell extends Component {\n  state = {\n    open: true,\n    mobileOpen: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    const drawer = (\n      <div>\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <Icon>inbox</Icon> : <Icon>mail</Icon>}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <Icon>inbox</Icon> : <Icon>mail</Icon>}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <Icon>menu</Icon>\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Responsive drawer\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden mdUp implementation=\"css\">\n            <Drawer\n              container={this.props.container}\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={this.state.mobileOpen}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden smDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Typography paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n            incididunt ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent\n            elementum facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in\n            hendrerit gravida rutrum quisque non tellus. Convallis convallis tellus id interdum\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing.\n            Amet nisl suscipit adipiscing bibendum est ultricies integer quis. Cursus euismod quis\n            viverra nibh cras. Metus vulputate eu scelerisque felis imperdiet proin fermentum leo.\n            Mauris commodo quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus\n            at augue. At augue eget arcu dictum varius duis at consectetur lorem. Velit sed\n            ullamcorper morbi tincidunt. Lorem donec massa sapien faucibus et molestie ac.\n          </Typography>\n          <Typography paragraph>\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\n            facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\n            tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\n            consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus\n            sed vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in.\n            In hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem\n            et tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique\n            sollicitudin nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo\n            viverra maecenas accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\n            ultrices sagittis orci a.\n          </Typography>\n        </main>\n      </div>\n    );\n  }\n}\n\nShell.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Shell);\n"]},"metadata":{},"sourceType":"module"}