{"ast":null,"code":"import _classCallCheck from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/caleb/Desktop/1819/react-scaffold/src/AppDrawer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nvar drawerWidth = 260;\n\nvar styles = function styles(theme) {\n  return {\n    drawer: _defineProperty({}, theme.breakpoints.up('sm'), {\n      width: drawerWidth,\n      flexShrink: 0\n    }),\n    // drawer: {\n    //   width: drawerWidth,\n    //   flexShrink: 0,\n    // },\n    drawerPaper: {\n      width: drawerWidth,\n      background: '#f7f7f7'\n    },\n    drawerToolbar: {\n      marginBottom: 7\n    }\n  };\n};\n\nvar AppDrawer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppDrawer, _Component);\n\n  function AppDrawer() {\n    _classCallCheck(this, AppDrawer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppDrawer).apply(this, arguments));\n  }\n\n  _createClass(AppDrawer, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          _this$props$open = _this$props.open,\n          open = _this$props$open === void 0 ? false : _this$props$open;\n      return React.createElement(\"nav\", {\n        className: classes.drawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"c The implementation can be swapped with js to avoid SEO duplication of links. */}\", React.createElement(Hidden, {\n        smUp: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        container: this.props.container,\n        variant: \"temporary\",\n        anchor: \"left\",\n        open: open,\n        onClose: function onClose() {\n          return _this.props.toggleDrawer();\n        },\n        classes: {\n          paper: classes.drawerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(Hidden, {\n        xsDown: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        classes: {\n          paper: classes.drawerPaper\n        },\n        variant: \"permanent\",\n        open: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AppDrawer;\n}(Component);\n\nAppDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(AppDrawer);","map":{"version":3,"sources":["/Users/caleb/Desktop/1819/react-scaffold/src/AppDrawer.js"],"names":["React","Component","PropTypes","withStyles","Drawer","SwipeableDrawer","Toolbar","Divider","Hidden","drawerWidth","styles","theme","drawer","breakpoints","up","width","flexShrink","drawerPaper","background","drawerToolbar","marginBottom","AppDrawer","props","classes","open","container","toggleDrawer","paper","propTypes","object","isRequired","withTheme"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,IAAMC,WAAW,GAAG,GAApB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,MAAM,sBACHD,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CADG,EAC0B;AAC5BC,MAAAA,KAAK,EAAEN,WADqB;AAE5BO,MAAAA,UAAU,EAAE;AAFgB,KAD1B,CADiB;AAOvB;AACA;AACA;AACA;AACAC,IAAAA,WAAW,EAAE;AACXF,MAAAA,KAAK,EAAEN,WADI;AAEXS,MAAAA,UAAU,EAAE;AAFD,KAXU;AAevBC,IAAAA,aAAa,EAAE;AACbC,MAAAA,YAAY,EAAE;AADD;AAfQ,GAAL;AAAA,CAApB;;IAoBMC,S;;;;;;;;;;;;;6BACK;AAAA;;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACCC,OADD,eACCA,OADD;AAAA,yCACUC,IADV;AAAA,UACUA,IADV,iCACe,KADf;AAGP,aACE;AAAK,QAAA,SAAS,EAAED,OAAO,CAACX,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,cAAc,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAE,KAAKU,KAAL,CAAWG,SADxB;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,IAAI,EAAED,IAJR;AAKE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACF,KAAL,CAAWI,YAAX,EAAN;AAAA,SALX;AAME,QAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAEJ,OAAO,CAACN;AADR,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ,EAgBI,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,cAAc,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE;AACPU,UAAAA,KAAK,EAAEJ,OAAO,CAACN;AADR,SADX;AAIE,QAAA,OAAO,EAAC,WAJV;AAKE,QAAA,IAAI,MALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAhBJ,CADF;AA4DD;;;;EAhEqBhB,S;;AAmExBoB,SAAS,CAACO,SAAV,GAAsB;AACpBL,EAAAA,OAAO,EAAErB,SAAS,CAAC2B,MAAV,CAAiBC,UADN;AAEpBnB,EAAAA,KAAK,EAAET,SAAS,CAAC2B,MAAV,CAAiBC;AAFJ,CAAtB;AAKA,eAAe3B,UAAU,CAACO,MAAD,EAAS;AAAEqB,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCV,SAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst drawerWidth = 260;\n\nconst styles = theme => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  // drawer: {\n  //   width: drawerWidth,\n  //   flexShrink: 0,\n  // },\n  drawerPaper: {\n    width: drawerWidth,\n    background: '#f7f7f7',\n  },\n  drawerToolbar: {\n    marginBottom: 7,\n  },\n});\n\nclass AppDrawer extends Component {\n  render() {\n    const { classes, open=false } = this.props;\n\n    return (\n      <nav className={classes.drawer}>\n          c The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={this.props.container}\n              variant=\"temporary\"\n              anchor=\"left\"\n              open={open}\n              onClose={() => this.props.toggleDrawer()}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              \n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              \n            </Drawer>\n          </Hidden>\n\n          {/* <Hidden mdUp implementation=\"js\">\n            <SwipeableDrawer\n              onClose={() => this.props.toggleDrawer()}\n              onOpen={() => this.props.toggleDrawer()}\n              open={open}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <Toolbar variant=\"dense\" disableGutters classes={{root: classes.drawerToolbar}}></Toolbar>\n              <Divider />\n              {this.props.children}\n            </SwipeableDrawer>\n          </Hidden>\n          <Hidden smDown implementation=\"js\">\n            <Drawer\n              className={classes.drawer}\n              variant=\"persistent\"\n              anchor=\"left\"\n              open={open}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <Toolbar variant=\"dense\" disableGutters classes={{root: classes.drawerToolbar}}></Toolbar>\n              <Divider />\n              {this.props.children}\n            </Drawer>\n          </Hidden> */}\n        </nav>\n    );\n  }\n}\n\nAppDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(AppDrawer);\n"]},"metadata":{},"sourceType":"module"}