{"ast":null,"code":"import _classCallCheck from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/caleb/Desktop/1819/react-scaffold/src/Appbar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {};\n};\n\nvar AppBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppBar, _Component);\n\n  function AppBar() {\n    _classCallCheck(this, AppBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppBar).apply(this, arguments));\n  }\n\n  _createClass(AppBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(AppBar, {\n        position: \"fixed\",\n        className: classNames(classes.appBar),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        onClick: function onClick() {\n          return _this.props.handleDrawerToggle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"menu\")), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.title || 'Untitled')));\n    }\n  }]);\n\n  return AppBar;\n}(Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(AppBar);","map":{"version":3,"sources":["/Users/caleb/Desktop/1819/react-scaffold/src/Appbar.js"],"names":["React","Component","PropTypes","withStyles","styles","theme","AppBar","classNames","classes","appBar","props","handleDrawerToggle","title","withTheme"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK,EAAL;AAAA,CAApB;;IAIMC,M;;;;;;;;;;;;;6BAEK;AAAA;;AACP,aACE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,OAAjB;AACE,QAAA,SAAS,EAAEC,UAAU,CAACC,OAAO,CAACC,MAAT,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,sBAAW,aAFb;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,KAAL,CAAWC,kBAAjB;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF,EAQE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAC,SAA/B;AAAyC,QAAA,MAAM,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,KAAX,IAAoB,UADvB,CARF,CAFF,CADF;AAiBD;;;;EApBkBX,S;;AAuBrB,eAAeE,UAAU,CAACC,MAAD,EAAS;AAAES,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCP,MAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n});\n\nclass AppBar extends Component {\n  \n  render() {\n    return(\n      <AppBar position=\"fixed\" \n        className={classNames(classes.appBar)}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={() => this.props.handleDrawerToggle}\n          >\n            <Icon>menu</Icon>\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            {this.props.title || 'Untitled'}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(AppBar);"]},"metadata":{},"sourceType":"module"}