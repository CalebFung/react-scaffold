{"ast":null,"code":"import _classCallCheck from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/caleb/Desktop/1819/react-scaffold/src/AppDrawer.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Divider from '@material-ui/core/Divider';\nimport Icon from '@material-ui/core/Icon';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nvar drawerWidth = 240;\n\nvar styles = function styles(theme) {\n  return {\n    drawer: _defineProperty({}, theme.breakpoints.up('md'), {\n      width: drawerWidth,\n      flexShrink: 0\n    }),\n    drawerPaper: {\n      width: drawerWidth\n    },\n    _drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    _toolbar: {\n      marginBottom: 7\n    },\n    selectedListItem: {\n      background: '#e0f2f1 !important' // doesn't work if `!important` is not set\n\n    },\n    listTextBase: {\n      fontSize: 14\n    },\n    selectedListText: {\n      color: '#00695c'\n    },\n    listText: {\n      color: '#212121'\n    },\n    listIconBase: {\n      marginLeft: 7\n    }\n  };\n};\n\nvar AppDrawer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppDrawer, _Component);\n\n  function AppDrawer() {\n    _classCallCheck(this, AppDrawer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppDrawer).apply(this, arguments));\n  }\n\n  _createClass(AppDrawer, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          _this$props$route = _this$props.route,\n          route = _this$props$route === void 0 ? '' : _this$props$route,\n          _this$props$open = _this$props.open,\n          open = _this$props$open === void 0 ? true : _this$props$open,\n          _this$props$mobileOpe = _this$props.mobileOpen,\n          mobileOpen = _this$props$mobileOpe === void 0 ? false : _this$props$mobileOpe,\n          _this$props$drawerIte = _this$props.drawerItems,\n          drawerItems = _this$props$drawerIte === void 0 ? {} : _this$props$drawerIte;\n      var drawer = React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        dense: true,\n        button: true,\n        key: \"home\",\n        component: Link,\n        to: \"/\",\n        selected: route === '',\n        classes: {\n          selected: classes.selectedListItem\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        fontSize: \"small\",\n        className: classNames(classes.listIconBase, route === '' ? classes.selectedListText : classes.listText),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"home\"), React.createElement(ListItemText, {\n        primary: \"Home\",\n        className: classes.listTextBase,\n        classes: {\n          primary: route === '' ? classes.selectedListText : classes.listText\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        dense: true,\n        button: true,\n        key: \"contact\",\n        component: Link,\n        to: \"/contact\",\n        selected: route === 'contact',\n        classes: {\n          selected: classes.selectedListItem\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        fontSize: \"small\",\n        className: classNames(classes.listIconBase, route === 'contact' ? classes.selectedListText : classes.listText),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"mail_outline\"), React.createElement(ListItemText, {\n        primary: \"Contact\",\n        className: classes.listTextBase,\n        classes: {\n          primary: route === 'contact' ? classes.selectedListText : classes.listText\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })));\n      return React.createElement(\"nav\", {\n        className: classes.drawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Hidden, {\n        mdUp: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        transitionDuration: {\n          enter: 100,\n          exit: 70\n        },\n        container: this.props.container,\n        variant: \"temporary\",\n        anchor: \"left\",\n        open: mobileOpen,\n        onClose: function onClose() {\n          return _this.props.handleDrawerToggle();\n        },\n        classes: {\n          paper: classes.drawerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        variant: \"dense\",\n        disableGutters: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), drawer)), React.createElement(Hidden, {\n        smDown: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        className: classes._drawer,\n        variant: \"persistent\",\n        anchor: \"left\",\n        open: open,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Toolbar, {\n        className: classes._toolbar,\n        variant: \"dense\",\n        disableGutters: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), drawer)));\n    }\n  }]);\n\n  return AppDrawer;\n}(Component);\n\nAppDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(AppDrawer);","map":{"version":3,"sources":["/Users/caleb/Desktop/1819/react-scaffold/src/AppDrawer.js"],"names":["React","Component","classNames","PropTypes","withStyles","Link","Drawer","Hidden","Toolbar","Divider","Icon","List","ListItem","ListItemText","drawerWidth","styles","theme","drawer","breakpoints","up","width","flexShrink","drawerPaper","_drawer","_toolbar","marginBottom","selectedListItem","background","listTextBase","fontSize","selectedListText","color","listText","listIconBase","marginLeft","AppDrawer","props","classes","route","open","mobileOpen","drawerItems","selected","primary","enter","exit","container","handleDrawerToggle","paper","toolbar","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Divider from '@material-ui/core/Divider';\nimport Icon from '@material-ui/core/Icon';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  drawer: {\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  _drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  _toolbar: {\n    marginBottom: 7,\n  },\n  selectedListItem: {\n    background: '#e0f2f1 !important', // doesn't work if `!important` is not set\n  },\n  listTextBase: {\n    fontSize: 14,\n  },\n  selectedListText: {\n    color: '#00695c',\n  },\n  listText: {\n    color: '#212121',\n  },\n  listIconBase: {\n    marginLeft: 7,\n  },\n});\n\nclass AppDrawer extends Component {\n\n  render() {\n    const { classes, route='', open=true, mobileOpen=false, drawerItems={} } = this.props;\n\n    const drawer = (\n      <List>\n        <ListItem dense button key=\"home\" component={Link} to=\"/\" \n          selected={route === ''}\n          classes={{selected: classes.selectedListItem}}>\n          <Icon fontSize=\"small\" \n            className={classNames(classes.listIconBase, route === '' ? classes.selectedListText : classes.listText)}>\n            home\n          </Icon> \n          <ListItemText primary=\"Home\" \n            className={classes.listTextBase} \n            classes={{primary: route === '' ? classes.selectedListText : classes.listText}}/>\n        </ListItem>\n        <ListItem dense button key=\"contact\" component={Link} to=\"/contact\" \n          selected={route === 'contact'}\n          classes={{selected: classes.selectedListItem}}>\n          <Icon fontSize=\"small\"\n            className={classNames(classes.listIconBase, route === 'contact' ? classes.selectedListText : classes.listText)}>\n            mail_outline\n          </Icon> \n          <ListItemText primary=\"Contact\"\n            className={classes.listTextBase} \n            classes={{primary: route === 'contact' ? classes.selectedListText : classes.listText}}/>\n        </ListItem>\n      </List>\n    );\n\n    return (\n      <nav className={classes.drawer}>\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden mdUp implementation=\"css\">\n          <Drawer\n            transitionDuration={{enter: 100, exit: 70}}\n            container={this.props.container}\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={mobileOpen}\n            onClose={() => this.props.handleDrawerToggle()}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <Toolbar variant=\"dense\" disableGutters></Toolbar>\n            <Divider />\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            className={classes._drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.toolbar} />\n            <Toolbar className={classes._toolbar} variant=\"dense\" disableGutters></Toolbar>\n            <Divider />\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    );\n  }\n}\n\nAppDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(AppDrawer);\n"]},"metadata":{},"sourceType":"module"}