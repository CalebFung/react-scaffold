{"ast":null,"code":"import _classCallCheck from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/caleb/Desktop/1819/react-scaffold/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/caleb/Desktop/1819/react-scaffold/src/Shell.js\";\nimport React, { Component } from 'react';\nimport Appbar from './Appbar';\nimport AppDrawer from './AppDrawer';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {};\n};\n\nvar Shell =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Shell, _Component);\n\n  function Shell() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Shell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Shell)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      drawerOpen: true\n    };\n\n    _this.updateDrawer = function () {// if (window.innerWidth < 600 && this.state.drawerOpen) this.toggleDrawer();\n    };\n\n    _this.toggleDrawer = function () {\n      _this.setState({\n        drawerOpen: !_this.state.drawerOpen\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Shell, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.updateDrawer);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateDrawer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Appbar, {\n        title: \"App Title\",\n        toggleDrawer: this.toggleDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(AppDrawer, {\n        open: this.state.drawerOpen,\n        toggleDrawer: this.toggleDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Shell;\n}(Component);\n\nShell.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(Shell);","map":{"version":3,"sources":["/Users/caleb/Desktop/1819/react-scaffold/src/Shell.js"],"names":["React","Component","Appbar","AppDrawer","PropTypes","withStyles","styles","theme","Shell","state","drawerOpen","updateDrawer","toggleDrawer","setState","window","addEventListener","removeEventListener","propTypes","classes","object","isRequired","withTheme"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK,EAAL;AAAA,CAApB;;IAIMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;;UAYRC,Y,GAAe,YAAM,CACnB;AACD,K;;UAEDC,Y,GAAe,YAAM;AACnB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAA1B,OAAd;AACD,K;;;;;;;wCAdmB;AAClBI,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,YAAvC;AACD;;;2CAEsB;AACrBG,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,YAA1C;AACD;;;6BAUQ;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,YAAY,EAAE,KAAKC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,UAA5B;AACE,QAAA,YAAY,EAAE,KAAKE,YADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AASD;;;;EAhCiBX,S;;AAmCpBO,KAAK,CAACS,SAAN,GAAkB;AAChBC,EAAAA,OAAO,EAAEd,SAAS,CAACe,MAAV,CAAiBC,UADV;AAEhBb,EAAAA,KAAK,EAAEH,SAAS,CAACe,MAAV,CAAiBC;AAFR,CAAlB;AAKA,eAAef,UAAU,CAACC,MAAD,EAAS;AAAEe,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCb,KAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Appbar from './Appbar';\nimport AppDrawer from './AppDrawer';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  \n});\n\nclass Shell extends Component {\n  state = {\n    drawerOpen: true,\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateDrawer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDrawer);\n  }\n\n  updateDrawer = () => {\n    // if (window.innerWidth < 600 && this.state.drawerOpen) this.toggleDrawer();\n  };\n\n  toggleDrawer = () => {\n    this.setState({ drawerOpen: !this.state.drawerOpen });\n  };\n\n  render() {\n\n    return (\n      <div>\n        <Appbar title=\"App Title\" toggleDrawer={this.toggleDrawer} />\n        <AppDrawer open={this.state.drawerOpen}\n          toggleDrawer={this.toggleDrawer}>\n          \n        </AppDrawer>\n      </div>\n    );\n  }\n}\n\nShell.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Shell);\n"]},"metadata":{},"sourceType":"module"}